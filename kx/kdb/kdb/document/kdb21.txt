KDB 2.1 Production

2000-06-06
 load's.t'	display ERROR line
 not|intersect	for all tables(not just non-keyed)

2000-05-28
 load text	('fields','types','delim')load ...
 't'not ...	delete records
 $ =/within/in	instantaneous record access 
 't'insert	scalar extension, e.g. 't'insert(2,(3,4))
 .odbc.open	`dsn`uid`pwd (http://kx.com/a/kdb/connect/odbc/client.txt)

2000-05-02(evaluation to 2000-09-01)
 load text	allow empties and "" for all delimiters
 \k commands	only admin(0) can execute
 -D		display viewer
 odbc		fix sqlgettypeinfo
 insert		cast
 update		cast(NUC)
 odbc		sqlbindparameter

2000-04-12
 load text	csv/txt at 1 to 10MB/sec. no extra space required.
 load(.kdb)	NT read(2::) instead of map(1::)
 save(.kdb)	NT like linux/unix: write to tempfile;move tempfile to .kdb
 remote assign	(drop;create;insert) e.g. h 4:(`":";(`v;data))
 ansi-sql	NUC groupby must match select prefix
 odbc		FIX metadata(4/4), aggrs, newdatasource for msquery

2000-04-06
 fill/null	allow vector left argument
 t[k].f		FIX empty table indexing and aggregations
 http		faster xml/txt/csv results

2000-04-04
 asc		check int/float if already sorted
 ksql/cast	int('23','34'),varchar(23,34)
 ksql/create	([]i:int(),f:float(),s:varchar())		
 odbc		ignore spurious uid;pwd
 odbc		various improvements to enable delphi front ends
 datetime	timestamp.time

2000-03-27
 http		ERROR: function: type[: param]
 http		no limit on results(default)
 odbc		DSN(prompt for file(s,t,kdb);prompt for host:port)
 view		sql nested select dependencies
 tables		alphabetic

2000-03-22(evaluation to 2000-06-01)
 save		unix/linux(write to tempfile; mv tempfile to .kdb)

2000-03-18
 http/odbc	nt/windows defaults set to 2080 and 2001 like linux/unix

2000-03-14
 view		sensitive to current_user
 datetime	cast, e.g. date(0,1,2)
 select		nested select demotes one-column table to list; one-element list to scalar
 
2000-03-06
 client		month etc. exported as varchar(instead of int) 
 http		tab-delimited(.txt) results, http://host:port/.txt?query
 odbc		sqlforeignkeys. DSN prompt for //host:port
 f[]		niladic function call

2000-02-29(evaluation to 2000-05-01)
 access		f execute: $grant select on f to user
 html		<td>nbsp;</td> for nulls. (bug in internet explorer)
 odbc		block floating point exceptions

2000-02-15(evaluation to 2000-04-01)
 xml/csv	http://host:port/{.xml|.csv|.k|}?select ...
 odbc		dbq=//[uid:pwd@]host:port
 ERROR		function: type[: parameter]

2000-01-23(evaluation to 2000-03-01)
 tables		list of tables (but not views)
 'f'asc't'	sort t by f - enables fast lookup(f{=|in|within} and t[f])
 'f'index't'	index field f in table t for fast lookup
 null x		boolean result
 -d		display incoming messages

2000-01-12	
 view		save definition(not value);FIX nested dependency reference
 timestamp	extended back to 1000A.D.(like date)

2000-01-10
 timestamp	tolerant 'yyyy-mm-dd[ hh[:mm[:ss]]]'
 views		list of views
 vars''(or't')	list of variables(in 't')
 meta''(or't')	table of vars and types(in 't')
 abs exp log sqrt sin cos tan

2000-01-09
 x fill y	ksql equivalent of coalesce(y,x)(or sybase isnull(y,x))
 odbc		FIX msquery display size
 $insert	fix2000-01-04 $insert into t(a,b) values ...	
 -n		ansi sql null(aggrs ignore) sql(3-value logic)

2000-01-04
 't'+u	't'-u	table add&subtract: add to old;append new(like insert)		
 insert		check type conformance	
 <init>fills	last known fill time series, e.g. 0 fills position by stock
 x not y	list(and nonkey table) set difference
 x intersect y	list(and nonkey table) set intersection
 view ...	FIX nested dependencies on fields(avoid reference error)
 ''fkey''	heuristic fkey all tables(link fields to key of same name) 
 ([]t f:...	explicit fkey (for field not name of table)
 ([]...)	NUC remove default heuristic(field->key) fkey.(also csv's)
 ([]...)	scalar extension(also select and update)
 .d.r		enum lookups, e.g. .d.r(`date;,`"2000-01-03"`"2000-01-04")

1999-12-20(2000-02-01)
 reverse	on tables and lists(also: first last drop asc desc ...)
 function	\f:{...}	/ use table[`field] NOT table.field
 load		.kdb etc. extension required(NUC)
 -r[h]p		replicate updates asynchronously to [host]port
 -l		log updates synchronously to *.kdb
 -e		errortrap
 -p		kdbc port(odbc/jdbc), e.g. h 4:"select sum qty by s from sp"
 -P		http port, e.g. http://localhost/?select sum qty by s from sp
 -dsn		load user/systemDSN, e.g. k db -dsn northwind
 odbc		various improvements
 cross		sql-mode allows cartesian products
 update		cascade primary key updates
 delete		delete v(sets v to null) to avoid reference errors
 viewer		faster display on large tables
 viewer		web(kdb partial) can view&query shuffle tables
 console	display tables in k format
 show't'	editable if no logging(default)
 asc|desc	amend-in-place, e.g. 'date'asc'trade'
 key|fkey	amend-in-place, e.g. ('boss','emp')fkey'emp'
 f vars t	rename table (or build from matrix)
 \\		exit in .s .t scripts
 callback	functions(k&c) e.g. .d.r"...";.d.r(`insert;(`t;t))
 		N.B. .d.r(op[;args]) is the only supported kdb entry-point

1999-11-28
 KSQL: view v ...
 SQL: create table(name type null)
 lowercase datetime variables(NUC)

1999-11-25(2000-01-01)
 GUI: results&view have column sorting; base tables don't yet
 GUI(NUC): calling 'k' doesn't show GUI by default(use t>show'')
 WEB: where menu expanded to include 'like'
 GUI: groupby menu's expanded to all varchar, integer and datetime
 K: k functions/procedures can be defined in .t scripts
 KSQL/CREATE: t:([]i:(),f:(),s:(),d:date(),t:time(),z:timestamp())
 ()(FIX)
 unlimited groupby 
 
1999-11-04
 ODBC: create/update/insert/delete
 LOGGING(NUC): default is off; k db -l (to turn on)
 DBF: allow extra character
 SQL+KSQL: detect redundant groupby expressions
 ODBC: varbinary/readkeys/readforeignkeys
 ODBC: sqlserver7 (click .mdf's) 
 UPDATE/INSERT speedup
 SQL: allow group by expressions
 KSQL: scalar extension
 add db/s.txt db/t.txt to release 
 addfileDSN(FIX)

1999-10-15
 DATETIME: date + 3 months (also quarters, halfs, years)
 AGGREGATE: speed up one dimensional aggrs to 6 MRPS
 WHERE:	from 14 to 60 MRPS
 AGGREGATE: speed up one dimensional aggrs to 4 MRPS
 DATETIME: allow ODBC {d'..'} {t'..'} {ts'..'}
 DATETIME: allow yymmdd yymm etc.
 LOAD:(.csv .dbf ...) rollover invalid time fields, e.g. month to month1
 DATE: speed up date.month etc. to 3 MRPS

NUC non upward compatible

MRPS million-records-per-second
multidimensional aggregations (450MHZ) 
0. select sum x from t            # 30	MRPS
1. select sum x by f from t       #  6	MRPS
2. select sum x by f, g from t    #  1.5MRPS

NT/WINDOWS start kdb with ...
 a. click on a database(.kdb) or ...
 b. rightclick a script(.s .t) and select 'kdb' or ...
 c. rightclick other filetypes (dsn mdb mdf xls csv txt dbf)
 ... clickdown 'K' on title bar for file menu and help.

k db {.dsn|.mdb|.mdf|-dsn ...} reads entire database