\kdb processes use ram, heap, disk and tcp/ip.

HEAP  solaris(4GB), linux(3GB), windowsNT(1.8GB)
 solaris2.6 has 2GB unless> ulimit -d unlimited
 2000A/S has /3GB flag for boot.ini.     (2.5GB)
 linux has 3.5GB user address space patch(3.5GB)

avoid swapping. ram should be 1 to 2GB per big process.
avoid wsfull.  swap should be 2 to 4GB per big process.
(on windows: rightclick mycomputer/properties/advanced/perfsettings/...)

test:
>k
 !:'40#17000000   / quickly blow out the heap
wsfull
>  \w
used alloc map    / alloc should be xGB

kdb allocation is reference-counted powers of 2.
ram usage is roughly equal to raw data.
heap allocation is 1 to 4 times raw.

1 to 2 because of powers of two. average 1.5. e.g. 
 a table with 4.2 million rows takes half the ram
 and the same heap as 8.3 million row table.
another 1 to 2 because of insert realloc.
 
what to do with wsfull
1. boot.ini /3GB (w2000AS) (50% gain)
2. normalize/tighten schema. remove redundant keys.
3. get kdb64(solaris2.8, aix64/power or linux64/itanium2)

DISK   local scsi, san, ... should get:
 30GB/sec. 500 writes/sec. 50 fsynch's/sec

test:
>cd DST  # big fast writable directory
>k
 \t `v 1:!25000000  / write 100MB. should be <3000 milliseconds
 \t do[1000;`v 3:!1000]  / write 1000 4K chunks. should be <2000 milliseconds
 \t do[ 100;`v 5:!1000] / fsynch 100 4K chunks. should be <2000 milliseconds

TCP/IP

 should get 10(LAN) to 30(MACH) MB/sec
 should get 1000(LAN) to 10000(MACH) MSG/sec
 should get 500(LAN) to 2000(MACH) http/sec

test:
server>k db -p 2001 -P 3001
client>k
 h:3:(`server;2001)
 \t h 4:"asc 2500000" /10MB
 \t do[1000;h 4:"23"] /2000MSGS
 \t do[1000;`"server:3001"`http 4:"GET /?23 HTTP/1.1\r\n\r\n"]
