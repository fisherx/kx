*.s are ansi-sql scripts 
*.t are ksql scripts

scripts build databases(*.kdb).

there are two stages:

 development/definition(...;save'd.kdb')
 production/transaction(load'd.kdb';...)

in interactive ksql,

ksql>\\                    exit
ksql>\                     escape to k(.d.l` to get back)
ksql>\...                  k-execute
ksql>d:date'1999-1-1'      define date
ksql>t:([k:(1,2)]r:(3,4))  define table
ksql>save'd.kdb'           save database d.kdb

ksql>load'd.kdb'           load database d.kdb
ksql>show''                show viewer(browse/filter/aggregate)
ksql>show't'               show table
ksql>t.r                   access column	
ksql>:...                  time expression
ksql>load'f.t'             load script f.t

results are printed out in k-notation.
 
in scripts,

/comment
/
multi-line 
comment
\
continue with indentation, e.g.,
select ...
 where ...

datetime
 literal:     date'yyyy-mm-dd' time'hh:mm:ss' timestamp'yyyy-mm-dd hh:mm:ss'
 add/sub:     date {+|-} n {months|quarters|halfs|years}

identifiers:  alpha[alpha_num*]
select:		default names(other than type) are last token(or `x)

system:	user([user]password) access([access,var,user]) \H:"" \Q:("",...)

(x is table or table name. '' current directory)
 show x
 vars x
 meta x       [name]T,W,P,N,D

(x is database name, e.g. save'sp.kdb')
 save x.kdb
 load x.kdb	(also .s .t .csv .dbf .mdb etc.)

eponymous type
 datetime are built-in table/types.
 fields with datetime names have that type.
 expressions with datetime type have that name.
 foreign key should be eponymous, e.g. sp:([s:...,p:...]...)
