FEED	peak/sec	total/day
2001
taq	1600		10mm
 cts   	 200 		 1mm
 cqs   	 500 		 3mm
 ntds 	 700 		 3mm
 lvl1  	 200 		 3mm
lvl2	 600		 8mm
euro600	 200		 1mm
opra	7000(trade 100)

2002m7 8mm lvl1(sum bids/asks)

the ktdb tickerplant can handle any number of feeds
up to 100,000 records per second per tickerplant.
we have some feed handlers, e.g. reuters triarch/tibco ssl4.0

CUSTOM FEED HANDLERS are easy to write.

feed handlers are processes (or dynamically loaded socket callbacks)
that send upd[table;record(s)] messages to the tickerplant.

1. connect to the tickerplant
2. send TCP binary of the form: ("upd";(`table;record(s)))  

for example, given tickerplant schema:
 trade:([]time,sym,price,size)
 quote:([]time,sym,bid,ask,bsize,asize)

(the tickerplant does the timestamp)

JAVA	http://kx.com/a/k/connect/java/c.java 
 try{k.c c=new k.c("localhost",2011);
 String sym;Double price,bid,ask;Integer size,bsize,asize;...
 while(1){...
  if(trade){Object[]a={sym,price,size};c.k("upd","trade",a);}
  else{Object[]a={sym,bid,ask,bsize,asize};c.k("upd","quote",a);}}

C	http://kx.com/a/k/connect/c k20.h k20.so
 #include"k20.h" // K structure definitions and generators
 main(){char*sym;double price,bid,ask;int size,bsize,asize;
  K r,y;cd(ksk("\\e 0",0);  // turn off debug
  r=ksk("h:3:(`localhost;2011);upd:{[t;x]h 3:(`upd;(t;x))}",0);
  if(r->t==6&&r->n){printf("can't connect\n");exit(1);}cd(r);
  while(1){... 
   if(trade)y=gnk(2,gs(sp("trade")),gnk(3,gs(sp(sym)),gf(price),gi(size)));
   else y=gnk(2,gs(sp("quote)),gnk(5,gs(sp(sym)),gf(bid),gf(ask),gi(bsize),gi(asize)));
   r=ksk("upd",y);cd(y);if(r->t==6&&r->n){printf("error %s\n",(S)r->n);exit(1);}cd(r);}

 or send bytes: http://kx.com/a/k/connect/tcp.txt
 or dynamically load read socket callback: ksk("upd",data);


BULK UPDATES (use bulk for more than 5000(1000 java) updates per second, e.g. OPRA)

JAVA: int n=1000;String sym;double price;int size;
 String[]Sym=new String[n];double[]Price=new double[n];int[]Size=new int[n];
 Object[]a={Sym,Price,Size};
 for(i=0;;++i){... Sym[i]=sym;Price[i]=price;Size[i]=size;
  if(i==1000){c.k("upd","quote",a);i=0;}}

C: int n=1000;char*sym;double price;int size;K Sym,Price,Size,y;cd(ksk("\\e 0",0));
 cd(ksk("h:3:(`localhost;2011);upd:{[t;x]h 4:(`upd;(x;y))}",0));
 Sym=gtn(-4,n),Price=gtn(-2,n),Size=gtn(-1,n),y=gnk(2,gs(sp("quote")),gnk(3,Sym,Price,Size));
 for(i=0;;++i){... KS(Sym)[i]=sp(sym),KF(Price)[i]=price,KI(Size)[i]=size;
  if(i==1000)cd(ksk("upd",y)),i=0;}   