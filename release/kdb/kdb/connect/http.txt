given a kdb server, e.g.

 k db trade.t -P 2080

a client can get(and post) binary data
(as well as get xml, txt, csv, html).

table results are (fields;data;types).
data is the usual inverted list of lists.
type is necessary to indicate datetime.
(int,float,varchar are redundant)

GET /.k?select sum amount by stock from trade

comes back as a stream of bytes ...
vectors are {int type,length;data...} on 8byte boundary
types are nested(0),int(-1),float(-2),varchar(-4)

4byte ints;data
 1 0	(1 indicates little-endian)
 0 3	(nested list of (fields;data;types))
-4 2	"stock\0amount\0\0\0\0"
 0 2	(nested list of (stock;amount))
-4 6	"aaa\0bbb\0ccc\0dd\0xx\0yyyy\0\0"
-1 6	... six integers ...
-4 2	"varchar\0int\0"


this is also useful for bulk update/insert.

POST /.k?insert   (`trade;inverted data)

a k client obviates all this. see:

http://kx.com/a/kdb/connect/kdbc.txt
