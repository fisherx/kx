some paradigm shifts and extensions in kdb. (k/db/t.txt)

1. inversion

the data is stored and manipulated by column.
ansisql can be understood as vector operations.

2. order

vectors are a superset of multisets/ansisql.
besides count,sum,min,max,avg
we can take advantage of order to look at first/last,
integrals(sums, prds, fills), derivatives(deltas, ratios)
and other non-atomic uniform functions.
(moving avgs, prev, next, rank,...)

3. enumeration

http://kx.com/a/kdb/examples/sp.t

instant joins and denormalization. every 
list(e.g. color:('blue','green','red')) and table
is an enumerated type. foreign keys and varchar
columns can be integer. i.e. varchar columns
can be foreign keys into enumerated list types.

s s:('s1','s1','s3')	# value foreign key
s:s ('s1','s1','s3')	# index foreign key
c:color('red','green')	# indices into color

datetime are infinite enumerated types, e.g. date'2000-01-01'

4. foreign key chasing

http://kx.com/a/kdb/examples/tpcd.t


functions are a superset of relations.

... from lineitem where order.customer.nation.region= ....

instead of

... from lineitem,order,customer,nation where 
lineitem.order=order.order and
order.customer=customer.customer and
customer.nation=nation.nation and
nation.region= ...

5. extended datetime

absolute:
timestamp second minute hour
date week month quarter half year

periodic:
time hhmmss hhmm hh
day mth qtr hlf

6. upsert

rewrite (modify) old and insert new.

t union u
t+u
t-u

7. grouped updates/column views/constraints

update change:deltas price by stock from trade
view trade.change:deltas price by stock
select from trade where 0<deltas price by stock

8. virtual memory

realtime kdb is a virtual memory database. disk is used for 
initial state and sequential log of change operations.
this is why kdb can do one million updates per second.
[inversion is crucial. keeps hot columns in memory.]
